name: Build release napi
on:
  workflow_dispatch:
  push:
    branches:
      - new_3
    tags:
      - '*'
env:
  FORCE_COLOR: 1
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  macos-napi:
    name: Build NAPI macos - Node ${{matrix.nodejs}} - ${{matrix.arch}}
    runs-on: macos-latest
    timeout-minutes: 3000

    strategy:
      fail-fast: false
      matrix:
        arch:
          - arm64
        nodejs:
          - 16
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.nodejs }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs }}
          cache: 'npm'

      - uses: actions/checkout@v2
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: pkg/mac/build
          key: ${{ runner.os }}-${{ matrix.arch }}-mac-${{ hashFiles('pkg/mac/build-cpp-deps-lib.sh') }}

      - name: Add env vars
        shell: bash
        run: |
          if [ "${{ matrix.target }}" = "x86_64" ]; then
            echo "TARGET=x64" >> $GITHUB_ENV
          else
            echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV
          fi

      - name: Build CPP dependencies lib
        run: |
          arch -arm64 zsh
          brew install node
          

#      - name: Build CPP dependencies lib
#        if: steps.cache-dependencies.outputs.cache-hit != 'true'
#        run: |
#          export ARCH=${{ matrix.arch }}
#          pkg/mac/build-cpp-deps-lib.sh
#
#      - name: Build CPP lib
#        if: steps.cache-pulsar.outputs.cache-hit != 'true'
#        run: |
#          export ARCH=${{ matrix.arch }}
#          pkg/mac/build-cpp-lib.sh
#
#      - name: Build Node binaries lib
#        run: |
#          npm install --ignore-scripts
#          npx node-pre-gyp configure --target_arch=${{ env.TARGET }}
#          npx node-pre-gyp build --target_arch=${{ env.TARGET }}
#
#      - name: Test loading Node binaries lib
#        run: |
#          node pkg/load_test.js
#
#      - name: Package Node binaries lib
#        run: |
#          npx node-pre-gyp package --target_arch=${{ env.TARGET }}
