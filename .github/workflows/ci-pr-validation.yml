#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
name: PR validation
on:
  push:
    branch:
      - 'new_tls_test'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  macos-napi:
    name: Build NAPI macos - Node ${{matrix.nodejs}} - ${{matrix.arch}}
    runs-on: macos-12
    timeout-minutes: 3000

    strategy:
      fail-fast: false
      matrix:
        arch:
          - x64
          - arm64
        nodejs:
          - 18
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.nodejs }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs }}
          cache: 'npm'

      - name: Add arch env vars
        run: |
          if [ "${{ matrix.arch }}" = "x64" ]; then
            echo "ARCH=x86_64" >> $GITHUB_ENV
          else
            echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          fi
      - name: Build CPP dependencies lib
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          export ARCH=${{ env.ARCH }}
          pkg/mac/build-cpp-deps-lib.sh
      #      - name: Setup upterm session
      #        uses: lhotari/action-upterm@v1

      - name: Build CPP lib
        if: steps.cache-pulsar.outputs.cache-hit != 'true'
        run: |
          export ARCH=${{ env.ARCH }}
          pkg/mac/build-cpp-lib.sh
      - name: Build Node binaries lib
        run: |
          npm install --ignore-scripts
          npx node-pre-gyp configure --target_arch=${{ matrix.arch }}
          npx node-pre-gyp build --target_arch=${{ matrix.arch }}
      - name: Test loading Node binaries lib
        if: matrix.arch == 'x64'
        run: |
          node pkg/load_test.js
      - name: Package Node binaries lib
        run: |
          npx node-pre-gyp package --target_arch=${{ matrix.arch }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mac-${{matrix.nodejs}}-${{matrix.arch}}
          path: build/stage/*/*.tar.gz