name: Build Binaries
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - '*'
    tags:
      - '*'
env:
  FORCE_COLOR: 1
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        arch:
          - x86_64
        nodejs:
          - 18
    name: ${{ matrix.os }} (nodejs=${{ matrix.nodejs }}, arch=${{ matrix.arch }})
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.nodejs }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs }}
          cache: 'npm'

      - name: Install dependencies
        run: yarn install --ignore-scripts

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: deps/build
          key: ${{ runner.os }}-${{ matrix.arch }}-deps-${{ hashFiles('deps/build-deps.sh') }}

      - name: Build dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          export ARCH=${{ matrix.arch }}
          deps/build-deps.sh

      - name: Cache Pulsar lib
        id: cache-pulsar
        uses: actions/cache@v3
        with:
          path: deps/build-pulsar
          key: ${{ runner.os }}-${{ matrix.arch }}-pulsar-${{ hashFiles('deps/build-*.sh') }}-${{ hashFiles('pulsar-version.txt') }}

      - name: Build Pulsar lib
        if: steps.cache-pulsar.outputs.cache-hit != 'true'
        run: |
          export ARCH=${{ matrix.arch }}
          deps/build-pulsar-lib.sh

      - name: Configure build
        run: yarn node-pre-gyp configure

      - name: Build binaries
        run: yarn node-pre-gyp build

      - name: Print binary info
        if: contains(matrix.os, 'ubuntu')
        run: |
          ldd lib/binding/*/Pulsar.node
          echo "---"
          nm lib/binding/*/Pulsar.node | grep "GLIBC_" | c++filt || true
          echo "---"
          file lib/binding/napi-v*/*

      - name: Test loading binaries
        run: |
          node load_test.js

      - name: Package prebuilt binaries
        run: |
          yarn node-pre-gyp package

      - name: Upload binaries to GitHub Release
        run: yarn node-pre-gyp-github publish
        env:
          NODE_PRE_GYP_GITHUB_TOKEN: ${{ github.token }}
